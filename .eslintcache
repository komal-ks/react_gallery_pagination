[{"/Users/mymac/my-app/src/App.js":"1","/Users/mymac/my-app/src/reportWebVitals.js":"2","/Users/mymac/my-app/src/index.js":"3","/Users/mymac/my-app/src/ImageShowTable.js":"4","/Users/mymac/my-app/src/imageShowTable.js":"5","/Users/mymac/my-app/src/searchImageFunc.js":"6"},{"size":4665,"mtime":1611731861747,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606390001278,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606390001278,"results":"10","hashOfConfig":"8"},{"size":344,"mtime":1611673336977,"results":"11","hashOfConfig":"8"},{"size":2913,"mtime":1611730017931,"results":"12","hashOfConfig":"8"},{"size":963,"mtime":1611700150952,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fsks90",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mymac/my-app/src/App.js",[],"/Users/mymac/my-app/src/reportWebVitals.js",[],"/Users/mymac/my-app/src/index.js",[],"/Users/mymac/my-app/src/ImageShowTable.js",[],"/Users/mymac/my-app/src/imageShowTable.js",["26","27","28","29"],"/Users/mymac/my-app/src/searchImageFunc.js",[],{"ruleId":"30","severity":1,"message":"31","line":36,"column":33,"nodeType":"32","messageId":"33","endLine":36,"endColumn":35},{"ruleId":"30","severity":1,"message":"31","line":36,"column":99,"nodeType":"32","messageId":"33","endLine":36,"endColumn":101},{"ruleId":"34","severity":1,"message":"35","line":47,"column":56,"nodeType":"36","endLine":47,"endColumn":71},{"ruleId":"30","severity":1,"message":"31","line":69,"column":53,"nodeType":"32","messageId":"33","endLine":69,"endColumn":55},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]entPage, imagesPerPage } = this.state;\n        let currentimages;\n\n        const indexOfLastPage = currentPage * imagesPerPage;\n        const indexOfFirstPage = indexOfLastPage - imagesPerPage;\n\n        const searchImages = [];\n        const params = new URLSearchParams(window.location.search);\n        const searchBoxValue = params && params.get('searchImageBox') ?  params.get('searchImageBox') : '';\n        \n        // Logic for displaying images\n        if(searchBoxValue){\n            images.map((item, i) =>\n                (item.length-1) == searchBoxValue.length && (item.substr(0,searchBoxValue.length) == searchBoxValue ? searchImages.push(item) : '')\n            );\n            currentimages = searchImages.slice(indexOfFirstPage, indexOfLastPage);\n        }else{\n            currentimages = images.slice(indexOfFirstPage, indexOfLastPage);\n        }\n        \n        const renderimages = currentimages.map((imageName, index) => {\n            return <li key={index}>\n                <LazyLoadImage\n                alt={imageName}\n                src={\"./images/\" + imageName + \".jpg\"} alt={imageName} />\n            </li>;\n        });\n    \n        // Logic for displaying page numbers\n        let pageNumbers = [];\n        if(searchBoxValue){\n            for (let i = 1; i <= Math.ceil(searchImages.length / imagesPerPage); i++) {\n                pageNumbers.push(i);\n            }\n        }else{\n            for (let i = 1; i <= Math.ceil(images.length / imagesPerPage); i++) {\n                pageNumbers.push(i);\n            }\n        }\n    \n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li\n                key={number}\n                id={number}\n                onClick={this.handleClick}\n                className = {this.state.currentPage == number ? 'active' : '' }\n                >\n                    {number}\n                </li>\n            );\n        });\n    \n        return (\n            <div>\n                <ul id='showImages'>\n                    {renderimages}\n                </ul>\n                <ul id=\"page-numbers\">\n                    {renderPageNumbers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ImageShowTable;","/Users/mymac/my-app/src/searchImageFunc.js",[],{"ruleId":"31","severity":1,"message":"32","line":36,"column":33,"nodeType":"33","messageId":"34","endLine":36,"endColumn":35},{"ruleId":"31","severity":1,"message":"32","line":36,"column":99,"nodeType":"33","messageId":"34","endLine":36,"endColumn":101},{"ruleId":"35","severity":1,"message":"36","line":47,"column":56,"nodeType":"37","endLine":47,"endColumn":71},{"ruleId":"31","severity":1,"message":"32","line":69,"column":53,"nodeType":"33","messageId":"34","endLine":69,"endColumn":55},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]